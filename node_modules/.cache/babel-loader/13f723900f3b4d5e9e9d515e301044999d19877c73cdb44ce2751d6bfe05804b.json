{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useTypingSpeed = (input, startTime, text) => {\n  _s();\n  const [wpm, setWpm] = useState(0);\n  const [errors, setErrors] = useState(0);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [isTimeUp, setIsTimeUp] = useState(false);\n  useEffect(() => {\n    if (startTime) {\n      const interval = setInterval(() => {\n        const elapsed = (Date.now() - startTime) / 1000; // время в секундах\n        setTimeElapsed(elapsed);\n        if (elapsed >= 30) {\n          setIsTimeUp(true);\n          clearInterval(interval);\n        }\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [startTime]);\n  useEffect(() => {\n    if (isTimeUp) {\n      const wordsTyped = input.trim().split(/\\s+/).length; // Подсчет слов\n      setWpm(Math.round(wordsTyped / 30 * 60)); // Используем 30 секунд\n      setErrors(input.split('').filter((char, index) => char !== text[index]).length);\n    } else if (input.length > 0 && startTime) {\n      // Подсчет ошибок в реальном времени\n      setErrors(input.split('').filter((char, index) => char !== text[index]).length);\n    }\n  }, [input, isTimeUp, startTime, text]);\n  return {\n    wpm,\n    errors,\n    isTimeUp\n  };\n};\n_s(useTypingSpeed, \"nglKiF+KrHokVIJSvnbtzw18P2o=\");\nexport default useTypingSpeed;","map":{"version":3,"names":["useState","useEffect","useTypingSpeed","input","startTime","text","_s","wpm","setWpm","errors","setErrors","timeElapsed","setTimeElapsed","isTimeUp","setIsTimeUp","interval","setInterval","elapsed","Date","now","clearInterval","wordsTyped","trim","split","length","Math","round","filter","char","index"],"sources":["C:/Users/kol/Desktop/dela/tests/typing_speed_trainer/src/hooks/useTypingSpeed.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useTypingSpeed = (input, startTime, text) => {\r\n  const [wpm, setWpm] = useState(0);\r\n  const [errors, setErrors] = useState(0);\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n  const [isTimeUp, setIsTimeUp] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (startTime) {\r\n      const interval = setInterval(() => {\r\n        const elapsed = (Date.now() - startTime) / 1000; // время в секундах\r\n        setTimeElapsed(elapsed);\r\n        if (elapsed >= 30) {\r\n          setIsTimeUp(true);\r\n          clearInterval(interval);\r\n        }\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [startTime]);\r\n\r\n  useEffect(() => {\r\n    if (isTimeUp) {\r\n      const wordsTyped = input.trim().split(/\\s+/).length; // Подсчет слов\r\n      setWpm(Math.round((wordsTyped / 30) * 60)); // Используем 30 секунд\r\n      setErrors(input.split('').filter((char, index) => char !== text[index]).length);\r\n    } else if (input.length > 0 && startTime) {\r\n      // Подсчет ошибок в реальном времени\r\n      setErrors(input.split('').filter((char, index) => char !== text[index]).length);\r\n    }\r\n  }, [input, isTimeUp, startTime, text]);\r\n\r\n  return { wpm, errors, isTimeUp };\r\n};\r\n\r\nexport default useTypingSpeed;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,cAAc,GAAGA,CAACC,KAAK,EAAEC,SAAS,EAAEC,IAAI,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,IAAIG,SAAS,EAAE;MACb,MAAMW,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjC,MAAMC,OAAO,GAAG,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGf,SAAS,IAAI,IAAI,CAAC,CAAC;QACjDQ,cAAc,CAACK,OAAO,CAAC;QACvB,IAAIA,OAAO,IAAI,EAAE,EAAE;UACjBH,WAAW,CAAC,IAAI,CAAC;UACjBM,aAAa,CAACL,QAAQ,CAAC;QACzB;MACF,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAMK,aAAa,CAACL,QAAQ,CAAC;IACtC;EACF,CAAC,EAAE,CAACX,SAAS,CAAC,CAAC;EAEfH,SAAS,CAAC,MAAM;IACd,IAAIY,QAAQ,EAAE;MACZ,MAAMQ,UAAU,GAAGlB,KAAK,CAACmB,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,KAAK,CAAC,CAACC,MAAM,CAAC,CAAC;MACrDhB,MAAM,CAACiB,IAAI,CAACC,KAAK,CAAEL,UAAU,GAAG,EAAE,GAAI,EAAE,CAAC,CAAC,CAAC,CAAC;MAC5CX,SAAS,CAACP,KAAK,CAACoB,KAAK,CAAC,EAAE,CAAC,CAACI,MAAM,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKD,IAAI,KAAKvB,IAAI,CAACwB,KAAK,CAAC,CAAC,CAACL,MAAM,CAAC;IACjF,CAAC,MAAM,IAAIrB,KAAK,CAACqB,MAAM,GAAG,CAAC,IAAIpB,SAAS,EAAE;MACxC;MACAM,SAAS,CAACP,KAAK,CAACoB,KAAK,CAAC,EAAE,CAAC,CAACI,MAAM,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKD,IAAI,KAAKvB,IAAI,CAACwB,KAAK,CAAC,CAAC,CAACL,MAAM,CAAC;IACjF;EACF,CAAC,EAAE,CAACrB,KAAK,EAAEU,QAAQ,EAAET,SAAS,EAAEC,IAAI,CAAC,CAAC;EAEtC,OAAO;IAAEE,GAAG;IAAEE,MAAM;IAAEI;EAAS,CAAC;AAClC,CAAC;AAACP,EAAA,CAjCIJ,cAAc;AAmCpB,eAAeA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}