{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kol\\\\Desktop\\\\dela\\\\tests\\\\typing_speed_trainer\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport useTypingSpeed from \"../hooks/useTypingSpeed\";\nimport TypingText from \"../components/TypingText\";\nimport InputField from \"../components/InputField\";\nimport Results from \"../components/Results\";\n\n// Массив текстов для выбора\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst texts = [`Это тестовый текст для ввода. Проверка скорости печати.`, `React - это библиотека для создания пользовательских интерфейсов.`, `Typing Speed Trainer - отличное приложение для тренировки.`];\nconst Home = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [startTime, setStartTime] = useState(null);\n  const [completed, setCompleted] = useState(false);\n  const [currentText, setCurrentText] = useState(texts[0]); // Текущий текст\n  const {\n    wpm,\n    errors\n  } = useTypingSpeed(input, startTime, currentText);\n  const handleChange = e => {\n    if (!startTime) setStartTime(Date.now());\n    if (completed) {\n      resetGame();\n      return;\n    }\n    setInput(e.target.value);\n  };\n  const resetGame = () => {\n    setInput('');\n    setStartTime(null);\n    setCompleted(false);\n    setCurrentText(texts[Math.floor(Math.random() * texts.length)]); // Выбор нового текста\n  };\n  useEffect(() => {\n    if (input.length === currentText.length) {\n      setCompleted(true);\n    }\n  }, [input, currentText]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Typing Speed Trainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TypingText, {\n      text: currentText,\n      input: input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      value: input,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), completed && /*#__PURE__*/_jsxDEV(Results, {\n      wpm: wpm,\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      children: \"\\u041F\\u0435\\u0440\\u0435\\u0437\\u0430\\u043F\\u0443\\u0441\\u0442\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"/jk7UMy+rIs6MmuIFTlaIh1lyME=\", false, function () {\n  return [useTypingSpeed];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","useTypingSpeed","TypingText","InputField","Results","jsxDEV","_jsxDEV","texts","Home","_s","input","setInput","startTime","setStartTime","completed","setCompleted","currentText","setCurrentText","wpm","errors","handleChange","e","Date","now","resetGame","target","value","Math","floor","random","length","children","fileName","_jsxFileName","lineNumber","columnNumber","text","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kol/Desktop/dela/tests/typing_speed_trainer/src/pages/Home.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport useTypingSpeed from \"../hooks/useTypingSpeed\";\r\nimport TypingText from \"../components/TypingText\";\r\nimport InputField from \"../components/InputField\";\r\nimport Results from \"../components/Results\";\r\n\r\n// Массив текстов для выбора\r\nconst texts = [\r\n  `Это тестовый текст для ввода. Проверка скорости печати.`,\r\n  `React - это библиотека для создания пользовательских интерфейсов.`,\r\n  `Typing Speed Trainer - отличное приложение для тренировки.`,\r\n];\r\n\r\nconst Home = () => {\r\n  const [input, setInput] = useState('');\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [completed, setCompleted] = useState(false);\r\n  const [currentText, setCurrentText] = useState(texts[0]); // Текущий текст\r\n  const { wpm, errors } = useTypingSpeed(input, startTime, currentText);\r\n\r\n  const handleChange = (e) => {\r\n    if (!startTime) setStartTime(Date.now());\r\n    if (completed) {\r\n      resetGame();\r\n      return;\r\n    }\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setInput('');\r\n    setStartTime(null);\r\n    setCompleted(false);\r\n    setCurrentText(texts[Math.floor(Math.random() * texts.length)]); // Выбор нового текста\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (input.length === currentText.length) {\r\n      setCompleted(true);\r\n    }\r\n  }, [input, currentText]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Typing Speed Trainer</h1>\r\n      <TypingText text={currentText} input={input} />\r\n      <InputField value={input} onChange={handleChange} />\r\n      {completed && <Results wpm={wpm} errors={errors} />}\r\n      <button onClick={resetGame}>Перезапустить</button> {/* Кнопка для перезапуска */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}