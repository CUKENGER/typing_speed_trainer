{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kol\\\\Desktop\\\\dela\\\\tests\\\\typing_speed_trainer\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport useTypingSpeed from \"../hooks/useTypingSpeed\";\nimport TypingText from \"../components/TypingText\";\nimport InputField from \"../components/InputField\";\nimport Results from \"../components/Results\";\n\n// Массив текстов для выбора\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst texts = [`Это тестовый текст для ввода. Проверка скорости печати. Это тестовый текст для ввода. Проверка скорости печати. Это тестовый текст для ввода. Проверка скорости печати. Это тестовый текст для ввода. Проверка скорости печати.`, `React - это библиотека для создания пользовательских интерфейсов. React - это библиотека для создания пользовательских интерфейсов. React - это библиотека для создания пользовательских интерфейсов.React - это библиотека для создания пользовательских интерфейсов.React - это библиотека для создания пользовательских интерфейсов.`, `Typing Speed Trainer - отличное приложение для тренировки . Typing Speed Trainer - отличное приложение для тренировки.  Typing Speed Trainer - отличное приложение для тренировки. Typing Speed Trainer - отличное приложение для тренировки. Typing Speed Trainer - отличное приложение для тренировки.`];\nconst Home = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [startTime, setStartTime] = useState(null);\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [time, setTime] = useState(0);\n  const [wpm, setWpm] = useState(0);\n  const [errors, setErrors] = useState(0);\n  const [currentText, setCurrentText] = useState(texts[0]); // Текущий текст\n  // const { wpm, errors, isTimeUp, time } = useTypingSpeed(input, startTime, currentText);\n\n  const handleChange = e => {\n    if (!startTime) setStartTime(Date.now());\n    if (isCompleted) {\n      // resetGame();\n      return;\n    }\n    setInput(e.target.value);\n  };\n  const resetGame = () => {\n    setInput('');\n    setStartTime(null);\n    setIsCompleted(false);\n    setCurrentText(texts[Math.floor(Math.random() * texts.length)]); // Выбор нового текста\n  };\n  useEffect(() => {\n    if (startTime) {\n      const interval = setInterval(() => {\n        const time = (Date.now() - startTime) / 1000; // время в секундах\n        setTime(time);\n        if (time >= 30) {\n          setIsCompleted(true);\n          clearInterval(interval);\n        }\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [startTime]);\n  useEffect(() => {\n    if (isCompleted) {\n      const wordsTyped = input.trim().split(/\\s+/).length; // Подсчет слов\n      setWpm(Math.round(wordsTyped / 30 * 60)); // Используем 30 секунд\n      setErrors(input.split('').filter((char, index) => char !== currentText[index]).length);\n    } else if (input.length > 0 && startTime) {\n      // Подсчет ошибок в реальном времени\n      setErrors(input.split('').filter((char, index) => char !== currentText[index]).length);\n    }\n  }, [input, isCompleted, startTime, currentText]);\n  useEffect(() => {\n    if (input.length === currentText.length) {\n      setIsCompleted(true);\n    }\n  }, [input, currentText]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center gap-y-[50px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Typing Speed Trainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TypingText, {\n      text: currentText,\n      input: input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      value: input,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: Math.round(time)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), isCompleted && /*#__PURE__*/_jsxDEV(Results, {\n      wpm: wpm,\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"px-\",\n      onClick: resetGame,\n      children: \"\\u041F\\u0435\\u0440\\u0435\\u0437\\u0430\\u043F\\u0443\\u0441\\u0442\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"YvmxoCVIYI11Asd3KDwXIWePrOs=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","useTypingSpeed","TypingText","InputField","Results","jsxDEV","_jsxDEV","texts","Home","_s","input","setInput","startTime","setStartTime","isCompleted","setIsCompleted","time","setTime","wpm","setWpm","errors","setErrors","currentText","setCurrentText","handleChange","e","Date","now","target","value","resetGame","Math","floor","random","length","interval","setInterval","clearInterval","wordsTyped","trim","split","round","filter","char","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","text","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kol/Desktop/dela/tests/typing_speed_trainer/src/pages/Home.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport useTypingSpeed from \"../hooks/useTypingSpeed\";\r\nimport TypingText from \"../components/TypingText\";\r\nimport InputField from \"../components/InputField\";\r\nimport Results from \"../components/Results\";\r\n\r\n// Массив текстов для выбора\r\nconst texts = [\r\n  `Это тестовый текст для ввода. Проверка скорости печати. Это тестовый текст для ввода. Проверка скорости печати. Это тестовый текст для ввода. Проверка скорости печати. Это тестовый текст для ввода. Проверка скорости печати.`,\r\n  `React - это библиотека для создания пользовательских интерфейсов. React - это библиотека для создания пользовательских интерфейсов. React - это библиотека для создания пользовательских интерфейсов.React - это библиотека для создания пользовательских интерфейсов.React - это библиотека для создания пользовательских интерфейсов.`,\r\n  `Typing Speed Trainer - отличное приложение для тренировки . Typing Speed Trainer - отличное приложение для тренировки.  Typing Speed Trainer - отличное приложение для тренировки. Typing Speed Trainer - отличное приложение для тренировки. Typing Speed Trainer - отличное приложение для тренировки.`,\r\n];\r\n\r\nconst Home = () => {\r\n  const [input, setInput] = useState('');\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [isCompleted, setIsCompleted] = useState(false);\r\n  const [time, setTime] = useState(0)\r\n  const [wpm, setWpm] = useState(0);\r\n  const [errors, setErrors] = useState(0);\r\n\r\n  const [currentText, setCurrentText] = useState(texts[0]); // Текущий текст\r\n  // const { wpm, errors, isTimeUp, time } = useTypingSpeed(input, startTime, currentText);\r\n\r\n  const handleChange = (e) => {\r\n    if (!startTime) setStartTime(Date.now());\r\n    if (isCompleted) {\r\n      // resetGame();\r\n      return;\r\n    }\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setInput('');\r\n    setStartTime(null);\r\n    setIsCompleted(false);\r\n    setCurrentText(texts[Math.floor(Math.random() * texts.length)]); // Выбор нового текста\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (startTime) {\r\n      const interval = setInterval(() => {\r\n        const time = (Date.now() - startTime) / 1000; // время в секундах\r\n        setTime(time)\r\n        if (time >= 30) {\r\n          setIsCompleted(true);\r\n          clearInterval(interval);\r\n        }\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [startTime]);\r\n\r\n  useEffect(() => {\r\n    if (isCompleted) {\r\n      const wordsTyped = input.trim().split(/\\s+/).length; // Подсчет слов\r\n      setWpm(Math.round((wordsTyped / 30) * 60)); // Используем 30 секунд\r\n      setErrors(input.split('').filter((char, index) => char !== currentText[index]).length);\r\n    } else if (input.length > 0 && startTime) {\r\n      // Подсчет ошибок в реальном времени\r\n      setErrors(input.split('').filter((char, index) => char !== currentText[index]).length);\r\n    }\r\n  }, [input, isCompleted, startTime, currentText]);\r\n\r\n  useEffect(() => {\r\n    if (input.length === currentText.length) {\r\n      setIsCompleted(true);\r\n    }\r\n  }, [input, currentText]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-y-[50px]\">\r\n      <h1>Typing Speed Trainer</h1>\r\n      <TypingText text={currentText} input={input} />\r\n      <InputField value={input} onChange={handleChange} />\r\n      <p>{Math.round(time)}</p>\r\n      {isCompleted && <Results wpm={wpm} errors={errors} />}\r\n      <button className=\"px-\" onClick={resetGame}>Перезапустить</button> {/* Кнопка для перезапуска */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}