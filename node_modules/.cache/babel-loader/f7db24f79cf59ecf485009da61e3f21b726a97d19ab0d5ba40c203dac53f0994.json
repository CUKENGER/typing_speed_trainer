{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kol\\\\Desktop\\\\dela\\\\tests\\\\typing_speed_trainer\\\\src\\\\components\\\\TypingText.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingText = ({\n  text,\n  input\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"font-bold w-[80%] text-justify text-4xl\",\n    children: [text.split('').map((char, index) => {\n      let color = 'text-gray-400'; // Обычный цвет текста (серый)\n      if (input[index] === char) {\n        color = 'text-green-500'; // Правильный символ (зеленый)\n      } else if (input[index] !== undefined) {\n        color = 'text-red-500'; // Неправильный символ (красный)\n      }\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: color,\n          children: char\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), index === input.length - 1 && input.length !== text.length && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"blinking-cursor\",\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this);\n    }), input.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-white text-4xl font-light animate-blink\",\n      children: \"|\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 30\n    }, this), input.length === text.length && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-white text-2xl font-light animate-blink\",\n      children: \"|\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = TypingText;\nexport default TypingText;\nvar _c;\n$RefreshReg$(_c, \"TypingText\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TypingText","text","input","className","children","split","map","char","index","color","undefined","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/kol/Desktop/dela/tests/typing_speed_trainer/src/components/TypingText.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst TypingText = ({ text, input }) => {\r\n  return (\r\n    <div className=\"font-bold w-[80%] text-justify text-4xl\">\r\n      {text.split('').map((char, index) => {\r\n        let color = 'text-gray-400'; // Обычный цвет текста (серый)\r\n        if (input[index] === char) {\r\n          color = 'text-green-500'; // Правильный символ (зеленый)\r\n        } else if (input[index] !== undefined) {\r\n          color = 'text-red-500'; // Неправильный символ (красный)\r\n        }\r\n\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <span className={color}>{char}</span>\r\n            {index === input.length - 1 && input.length !== text.length && (\r\n              <span className=\"blinking-cursor\">|</span>\r\n            )}\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n      \r\n      {/* Если пользователь еще ничего не ввел, отображаем курсор в начале */}\r\n      {input.length === 0 && <span className=\"text-white text-4xl font-light animate-blink\">|</span>}\r\n\r\n      {/* Если пользователь ввел весь текст, но курсор еще не отображается */}\r\n      {input.length === text.length && (\r\n        <span className=\"text-white text-2xl font-light animate-blink\">|</span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TypingText;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EACtC,oBACEH,OAAA;IAAKI,SAAS,EAAC,yCAAyC;IAAAC,QAAA,GACrDH,IAAI,CAACI,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACnC,IAAIC,KAAK,GAAG,eAAe,CAAC,CAAC;MAC7B,IAAIP,KAAK,CAACM,KAAK,CAAC,KAAKD,IAAI,EAAE;QACzBE,KAAK,GAAG,gBAAgB,CAAC,CAAC;MAC5B,CAAC,MAAM,IAAIP,KAAK,CAACM,KAAK,CAAC,KAAKE,SAAS,EAAE;QACrCD,KAAK,GAAG,cAAc,CAAC,CAAC;MAC1B;MAEA,oBACEV,OAAA,CAACF,KAAK,CAACc,QAAQ;QAAAP,QAAA,gBACbL,OAAA;UAAMI,SAAS,EAAEM,KAAM;UAAAL,QAAA,EAAEG;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACpCP,KAAK,KAAKN,KAAK,CAACc,MAAM,GAAG,CAAC,IAAId,KAAK,CAACc,MAAM,KAAKf,IAAI,CAACe,MAAM,iBACzDjB,OAAA;UAAMI,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAC;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAC1C;MAAA,GAJkBP,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CAAC;IAErB,CAAC,CAAC,EAGDb,KAAK,CAACc,MAAM,KAAK,CAAC,iBAAIjB,OAAA;MAAMI,SAAS,EAAC,8CAA8C;MAAAC,QAAA,EAAC;IAAC;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAG7Fb,KAAK,CAACc,MAAM,KAAKf,IAAI,CAACe,MAAM,iBAC3BjB,OAAA;MAAMI,SAAS,EAAC,8CAA8C;MAAAC,QAAA,EAAC;IAAC;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CACvE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACE,EAAA,GA9BIjB,UAAU;AAgChB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}