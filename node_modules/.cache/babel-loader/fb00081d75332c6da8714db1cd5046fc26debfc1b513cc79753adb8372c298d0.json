{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kol\\\\Desktop\\\\dela\\\\tests\\\\typing_speed_trainer\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport TypingText from \"../components/TypingText\";\nimport InputField from \"../components/InputField\";\nimport Results from \"../components/Results\";\n\n// Массив текстов для выбора\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst texts = [`the quick brown fox jumps over the lazy dog repeatedly without ever stopping to rest or slow down it continues to leap across the vast open field as the sun sets in the distance casting long shadows on the ground`, `a journey of a thousand miles begins with a single step each step you take brings you closer to your destination and though the path may be long and winding persistence will ultimately lead you to your goal`, `practice makes perfect so keep on typing\n  the early bird catches the worm but the second mouse gets the cheese\n  `, `an apple a day keeps the doctor away\n  better late than never but never late is better`, `do not count your chickens before they hatch\n  every cloud has a silver lining just keep looking up`];\nconst Home = () => {\n  _s();\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [time, setTime] = useState(30);\n  const [wpm, setWpm] = useState(0);\n  const [errors, setErrors] = useState(0);\n  const [input, setInput] = useState('');\n  const [currentText, setCurrentText] = useState(texts[0]); // Текущий текст\n  const inputRef = useRef(null);\n  const handleChange = e => {\n    if (!startTime) {\n      setStartTime(Date.now());\n    }\n    if (isCompleted) {\n      return; // Блокируем дальнейший ввод после завершения\n    }\n    setInput(e.target.value);\n  };\n  const resetGame = () => {\n    setInput('');\n    setStartTime(null);\n    setIsCompleted(false);\n    setCurrentText(texts[Math.floor(Math.random() * texts.length)]); // Выбор нового текста\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  useEffect(() => {\n    if (startTime) {\n      const interval = setInterval(() => {\n        const time = (Date.now() - startTime) / 1000; // время в секундах\n        setTime(prev => prev - 1);\n        if (time >= 30) {\n          setIsCompleted(true);\n          clearInterval(interval);\n        }\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [startTime]);\n  useEffect(() => {\n    if (isCompleted) {\n      if (inputRef.current) {\n        inputRef.current.blur(); // Убираем фокус с поля ввода\n      }\n      const wordsTyped = input.trim().split(/\\s+/).length; // Подсчет слов\n      setWpm(Math.round(wordsTyped / 30 * 60)); // Используем 30 секунд\n      setErrors(input.split('').filter((char, index) => char !== currentText[index]).length);\n    } else if (input.length > 0 && startTime) {\n      // Подсчет ошибок в реальном времени\n      setErrors(input.split('').filter((char, index) => char !== currentText[index]).length);\n    }\n  }, [input, isCompleted, startTime, currentText]);\n  useEffect(() => {\n    if (input.length === currentText.length) {\n      setIsCompleted(true);\n      if (inputRef.current) {\n        inputRef.current.blur(); // Убираем фокус с поля ввода при завершении\n      }\n    }\n  }, [input, currentText]);\n\n  // Обработчик кликов по документу для установки фокуса на input, если тест не завершен\n  useEffect(() => {\n    const handleDocumentClick = () => {\n      if (inputRef.current && !isCompleted) {\n        inputRef.current.focus();\n      }\n    };\n    document.addEventListener('click', handleDocumentClick);\n    return () => {\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  }, [isCompleted]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center gap-y-[50px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Typing Speed Trainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TypingText, {\n      text: currentText,\n      input: input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      value: input,\n      onChange: handleChange,\n      inputRef: inputRef,\n      isDisabled: isCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: Math.round(time)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), isCompleted && /*#__PURE__*/_jsxDEV(Results, {\n      wpm: wpm,\n      errors: errors,\n      resetGame: resetGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"px-[12px] py-[7px] bg-slate-700 rounded-lg\",\n      onClick: resetGame,\n      children: \"\\u041F\\u0435\\u0440\\u0435\\u0437\\u0430\\u043F\\u0443\\u0441\\u0442\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"l4e/u8awqE7huXnudmmUn3WeXZs=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","useRef","TypingText","InputField","Results","jsxDEV","_jsxDEV","texts","Home","_s","isCompleted","setIsCompleted","startTime","setStartTime","time","setTime","wpm","setWpm","errors","setErrors","input","setInput","currentText","setCurrentText","inputRef","handleChange","e","Date","now","target","value","resetGame","Math","floor","random","length","current","focus","interval","setInterval","prev","clearInterval","blur","wordsTyped","trim","split","round","filter","char","index","handleDocumentClick","document","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","text","onChange","isDisabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kol/Desktop/dela/tests/typing_speed_trainer/src/pages/Home.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport TypingText from \"../components/TypingText\";\r\nimport InputField from \"../components/InputField\";\r\nimport Results from \"../components/Results\";\r\n\r\n// Массив текстов для выбора\r\nconst texts = [\r\n  `the quick brown fox jumps over the lazy dog repeatedly without ever stopping to rest or slow down it continues to leap across the vast open field as the sun sets in the distance casting long shadows on the ground`,\r\n  `a journey of a thousand miles begins with a single step each step you take brings you closer to your destination and though the path may be long and winding persistence will ultimately lead you to your goal`,\r\n  `practice makes perfect so keep on typing\r\n  the early bird catches the worm but the second mouse gets the cheese\r\n  `,\r\n  `an apple a day keeps the doctor away\r\n  better late than never but never late is better`,\r\n  `do not count your chickens before they hatch\r\n  every cloud has a silver lining just keep looking up`\r\n];\r\n\r\nconst Home = () => {\r\n  const [isCompleted, setIsCompleted] = useState(false);\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [time, setTime] = useState(30);\r\n  const [wpm, setWpm] = useState(0);\r\n  const [errors, setErrors] = useState(0);\r\n  const [input, setInput] = useState('');\r\n  const [currentText, setCurrentText] = useState(texts[0]); // Текущий текст\r\n  const inputRef = useRef(null);\r\n\r\n  const handleChange = (e) => {\r\n    if (!startTime) {\r\n      setStartTime(Date.now());\r\n    }\r\n    if (isCompleted) {\r\n      return; // Блокируем дальнейший ввод после завершения\r\n    }\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setInput('');\r\n    setStartTime(null);\r\n    setIsCompleted(false);\r\n    setCurrentText(texts[Math.floor(Math.random() * texts.length)]); // Выбор нового текста\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (startTime) {\r\n      const interval = setInterval(() => {\r\n        const time = (Date.now() - startTime) / 1000; // время в секундах\r\n        setTime(prev => prev - 1);\r\n        if (time >= 30) {\r\n          setIsCompleted(true);\r\n          clearInterval(interval);\r\n        }\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [startTime]);\r\n\r\n  useEffect(() => {\r\n    if (isCompleted) {\r\n      if (inputRef.current) {\r\n        inputRef.current.blur(); // Убираем фокус с поля ввода\r\n      }\r\n      const wordsTyped = input.trim().split(/\\s+/).length; // Подсчет слов\r\n      setWpm(Math.round((wordsTyped / 30) * 60)); // Используем 30 секунд\r\n      setErrors(input.split('').filter((char, index) => char !== currentText[index]).length);\r\n    } else if (input.length > 0 && startTime) {\r\n      // Подсчет ошибок в реальном времени\r\n      setErrors(input.split('').filter((char, index) => char !== currentText[index]).length);\r\n    }\r\n  }, [input, isCompleted, startTime, currentText]);\r\n\r\n  useEffect(() => {\r\n    if (input.length === currentText.length) {\r\n      setIsCompleted(true);\r\n      if (inputRef.current) {\r\n        inputRef.current.blur(); // Убираем фокус с поля ввода при завершении\r\n      }\r\n    }\r\n  }, [input, currentText]);\r\n\r\n  // Обработчик кликов по документу для установки фокуса на input, если тест не завершен\r\n  useEffect(() => {\r\n    const handleDocumentClick = () => {\r\n      if (inputRef.current && !isCompleted) {\r\n        inputRef.current.focus();\r\n      }\r\n    };\r\n    document.addEventListener('click', handleDocumentClick);\r\n    return () => {\r\n      document.removeEventListener('click', handleDocumentClick);\r\n    };\r\n  }, [isCompleted]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-y-[50px]\">\r\n      <h1>Typing Speed Trainer</h1>\r\n      <TypingText text={currentText} input={input} />\r\n      <InputField value={input} onChange={handleChange} inputRef={inputRef} isDisabled={isCompleted} />\r\n      <p>{Math.round(time)}</p>\r\n      {isCompleted && <Results wpm={wpm} errors={errors} resetGame={resetGame} />}\r\n      <button className=\"px-[12px] py-[7px] bg-slate-700 rounded-lg\" onClick={resetGame}>Перезапустить</button> {/* Кнопка для перезапуска */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}